/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import BUS.*;
import DAO.MyConnection;
import DAO.PhieuMuonDAO;
import DAO.PhieuTraDAO;
import DTO.*;
import Helpler.Helpler;

import javax.swing.*;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Date;
import java.util.Map;

/**
 * @author pc
 */
public class PhieuMuonGUI extends javax.swing.JPanel {

    /**
     * Creates new form PhieuTraGUI
     */
    private PhieuMuonDTO newPhieuMuonDTO;
    private ArrayList<SachDTO> listSach;
    private ArrayList<NguoiDocDTO> listNguoiDoc;
    private PhieuMuonDTO phieuMuonChuanBiTra;
    private NhanVienDTO nhanVienDangNhap;
    private BaseUI baseUI;

    public PhieuMuonGUI(NhanVienDTO nhanVienDangNhap, BaseUI baseUI) {
        initComponents();
        this.nhanVienDangNhap = nhanVienDangNhap;
        this.baseUI = baseUI;

        if (nhanVienDangNhap.getVaiTro() != NhanVienDTO.VaiTro.QUAN_LY.ordinal()) {
            btnXoa.setEnabled(false);
        }

        jDateChooserNgayMuonTimKiemFrom.setDateFormatString("dd/MM/yyyy");
        jDateChooserNgayMuonTimKiemTo.setDateFormatString("dd/MM/yyyy");
        jDateChooserNgayTraTimKiemFrom.setDateFormatString("dd/MM/yyyy");
        jDateChooserNgayTraTimKiemTo.setDateFormatString("dd/MM/yyyy");

        setTableItemList();
        Helpler.centerCell(jTablePhieuMuon);
        Helpler.centerCell(jTableChiTietPhieuMuon);
        Helpler.centerCell(jTableXemChiTiet);
    }

    public void loadDB() {
    }

    //Find all and insert into the table
    public void setTableItemList() {
        PhieuMuonBUS phieuMuonBUS = new PhieuMuonBUS();
        ArrayList<PhieuMuonDTO> listPhieuMuon = phieuMuonBUS.findAll();
        setTableItemList(listPhieuMuon);
    }

    public void setTableItemList(ArrayList<PhieuMuonDTO> listPhieuMuon) {
        DefaultTableModel phieuMuonModel = (DefaultTableModel) jTablePhieuMuon.getModel();
        phieuMuonModel.setRowCount(0);
        SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
        listPhieuMuon.forEach(phieuMuonDTO -> {
            phieuMuonModel.addRow(new Object[]{
                    phieuMuonDTO.getId_pm(),
                    phieuMuonDTO.getId_nv(),
                    phieuMuonDTO.getNhanVienDTO().getHoTen_NV(),
                    phieuMuonDTO.getId_ND(),
                    phieuMuonDTO.getNguoiDocDTO().getHoTen(),
                    formatter.format(phieuMuonDTO.getNgay_muon()),
                    formatter.format(phieuMuonDTO.getNgay_Tra()),
                    phieuMuonDTO.getTinhTrang().toString(),
            });
        });
    }

    public void clearAll() {
        //Dialog them
        txtIdSoLuong.setText("");
        DefaultTableModel xacNhanCTPhieuTraModel = (DefaultTableModel) jTableChiTietPhieuMuon.getModel();
        xacNhanCTPhieuTraModel.setRowCount(0);
        //Dialog Xem
        txtIDPhieuXem.setText("");
        txtIDNhanVienXem.setText("");
        txtIDNguoiDocXem.setText("");
        txtNgayMuonXem.setText("");
        txtNgayTraXem.setText("");
        txtIdNguoiDocThem.setText("");
        txtIdSachThem.setText("");
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialogThem = new javax.swing.JDialog();
        cardsThem = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        lbTieuDeMuon = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableChiTietPhieuMuon = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        btnXacNhanThem = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txtIdSoLuong = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        txtIdNguoiDocThem = new javax.swing.JTextField();
        txtIdSachThem = new javax.swing.JTextField();
        btnThemVaoCTMuon = new javax.swing.JButton();
        btnKiemTraNguoiDoc = new javax.swing.JButton();
        btnThemSach = new javax.swing.JButton();
        btnTimNguoiDoc = new javax.swing.JButton();
        jDialogXemChiTiet = new javax.swing.JDialog();
        jLabel5 = new javax.swing.JLabel();
        txtIDPhieuXem = new javax.swing.JTextField();
        txtIDNguoiDocXem = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableXemChiTiet = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtNgayTraXem = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtIDNhanVienXem = new javax.swing.JTextField();
        txtNgayMuonXem = new javax.swing.JTextField();
        jDialogTimKiem = new javax.swing.JDialog();
        jPanel8 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtIDPhieuTimKiem = new javax.swing.JTextField();
        txtIDNguoiDocTimKiem = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jDateChooserNgayMuonTimKiemFrom = new com.toedter.calendar.JDateChooser();
        jPanel9 = new javax.swing.JPanel();
        btnXacNhanTimKiem = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jDateChooserNgayMuonTimKiemTo = new com.toedter.calendar.JDateChooser();
        jLabel19 = new javax.swing.JLabel();
        txtIDNhanVienTimKiem = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jDateChooserNgayTraTimKiemFrom = new com.toedter.calendar.JDateChooser();
        jLabel18 = new javax.swing.JLabel();
        jDateChooserNgayTraTimKiemTo = new com.toedter.calendar.JDateChooser();
        jDialogTraSach = new javax.swing.JDialog();
        cardsThem1 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableXacNhanCTPhieuTra = new javax.swing.JTable();
        jPanel11 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        btnXacNhan = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePhieuMuon = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        btnXoa = new javax.swing.JButton();
        filler8 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        btnTraSach = new javax.swing.JButton();
        filler9 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        btnTaiLai = new javax.swing.JButton();
        filler7 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        btnTimKiem = new javax.swing.JButton();
        filler6 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        btnXem = new javax.swing.JButton();

        jDialogThem.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jDialogThem.setTitle("Them");
        jDialogThem.setMinimumSize(new java.awt.Dimension(600, 400));

        jLabel4.setText("ID Người đọc");

        lbTieuDeMuon.setText("Danh sách chi tiết mượn");

        jTableChiTietPhieuMuon.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{
                        {null, null, null, null},
                        {null, null, null, null},
                        {null, null, null, null},
                        {null, null, null, null}
                },
                new String[]{
                        "ID Sách", "Tên sách", "Số lượng mượn", "Số lượng trong kho"
                }
        ) {
            Class[] types = new Class[]{
                    java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean[]{
                    false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTableChiTietPhieuMuon);
        if (jTableChiTietPhieuMuon.getColumnModel().getColumnCount() > 0) {
            jTableChiTietPhieuMuon.getColumnModel().getColumn(1).setResizable(false);
        }

        btnXacNhanThem.setText("Thêm phiếu mượn");
        btnXacNhanThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXacNhanThemActionPerformed(evt);
            }
        });
        jPanel6.add(btnXacNhanThem);

        jLabel16.setText("ID sách");

        jLabel17.setText("Số lượng mượn");

        btnThemVaoCTMuon.setText("Thêm chi tiết mượn");
        btnThemVaoCTMuon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemVaoCTMuonActionPerformed(evt);
            }
        });

        btnKiemTraNguoiDoc.setText("Kiểm tra người đọc");
        btnKiemTraNguoiDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKiemTraNguoiDocActionPerformed(evt);
            }
        });

        btnThemSach.setText("Thêm sách");
        btnThemSach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemSachActionPerformed(evt);
            }
        });

        btnTimNguoiDoc.setText("Tìm người đọc");
        btnTimNguoiDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimNguoiDocActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 492, Short.MAX_VALUE)
                        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lbTieuDeMuon)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                        .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE))
                                                .addGap(116, 116, 116)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(txtIdNguoiDocThem, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                                        .addComponent(txtIdSachThem)))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel17)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(txtIdSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(btnKiemTraNguoiDoc)
                                        .addComponent(btnThemSach)
                                        .addComponent(btnTimNguoiDoc))
                                .addGap(0, 0, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnThemVaoCTMuon)
                                .addGap(173, 173, 173))
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txtIdNguoiDocThem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel4)
                                        .addComponent(btnKiemTraNguoiDoc))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txtIdSachThem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel16)
                                        .addComponent(btnThemSach))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel17)
                                        .addComponent(txtIdSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnTimNguoiDoc))
                                .addGap(18, 18, 18)
                                .addComponent(btnThemVaoCTMuon)
                                .addGap(1, 1, 1)
                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbTieuDeMuon)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout cardsThemLayout = new javax.swing.GroupLayout(cardsThem);
        cardsThem.setLayout(cardsThemLayout);
        cardsThemLayout.setHorizontalGroup(
                cardsThemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        cardsThemLayout.setVerticalGroup(
                cardsThemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialogThemLayout = new javax.swing.GroupLayout(jDialogThem.getContentPane());
        jDialogThem.getContentPane().setLayout(jDialogThemLayout);
        jDialogThemLayout.setHorizontalGroup(
                jDialogThemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialogThemLayout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(cardsThem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(30, 30, 30))
        );
        jDialogThemLayout.setVerticalGroup(
                jDialogThemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jDialogThemLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(cardsThem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())
        );

        jDialogXemChiTiet.setTitle("Xem chi tiết");
        jDialogXemChiTiet.setMinimumSize(new java.awt.Dimension(600, 400));

        jLabel5.setText("ID phiếu");

        txtIDPhieuXem.setEnabled(false);

        txtIDNguoiDocXem.setEnabled(false);

        jLabel6.setText("Người đọc");

        jTableXemChiTiet.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{
                        {null, null, null},
                        {null, null, null},
                        {null, null, null},
                        {null, null, null}
                },
                new String[]{
                        "ID sách", "Tên sách", "Số lượng mượn"
                }
        ) {
            Class[] types = new Class[]{
                    java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTableXemChiTiet);

        jLabel14.setText("Ngày Mượn");

        jLabel15.setText("Ngày trả");

        txtNgayTraXem.setEnabled(false);

        jLabel7.setText("Nhân viên");

        txtIDNhanVienXem.setEnabled(false);

        txtNgayMuonXem.setEnabled(false);

        javax.swing.GroupLayout jDialogXemChiTietLayout = new javax.swing.GroupLayout(jDialogXemChiTiet.getContentPane());
        jDialogXemChiTiet.getContentPane().setLayout(jDialogXemChiTietLayout);
        jDialogXemChiTietLayout.setHorizontalGroup(
                jDialogXemChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
                        .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jDialogXemChiTietLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jDialogXemChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel6)
                                        .addComponent(jLabel7))
                                .addGap(36, 36, 36)
                                .addGroup(jDialogXemChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtIDNhanVienXem, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                                        .addComponent(txtIDNguoiDocXem)
                                        .addComponent(txtIDPhieuXem, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(jDialogXemChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jDialogXemChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtNgayTraXem, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtNgayMuonXem, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jDialogXemChiTietLayout.setVerticalGroup(
                jDialogXemChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jDialogXemChiTietLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jDialogXemChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel5)
                                        .addComponent(txtIDPhieuXem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel14)
                                        .addComponent(txtNgayMuonXem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jDialogXemChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel6)
                                        .addComponent(txtIDNguoiDocXem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel15)
                                        .addComponent(txtNgayTraXem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jDialogXemChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel7)
                                        .addComponent(txtIDNhanVienXem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jDialogTimKiem.setMinimumSize(new java.awt.Dimension(600, 400));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel8.setText("Tìm kiếm");
        jPanel8.add(jLabel8);

        jLabel9.setText("ID phiếu");

        jLabel10.setText("ID người đọc");

        jLabel11.setText("Ngày mượn");

        btnXacNhanTimKiem.setText("Xác nhận tìm kiếm");
        btnXacNhanTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXacNhanTimKiemActionPerformed(evt);
            }
        });
        jPanel9.add(btnXacNhanTimKiem);

        jLabel13.setText("Đến");
        jLabel13.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel13.setInheritsPopupMenu(false);

        jLabel19.setText("ID nhân viên");

        jLabel12.setText("Ngày trả");

        jLabel18.setText("Đến");
        jLabel18.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel18.setInheritsPopupMenu(false);

        javax.swing.GroupLayout jDialogTimKiemLayout = new javax.swing.GroupLayout(jDialogTimKiem.getContentPane());
        jDialogTimKiem.getContentPane().setLayout(jDialogTimKiemLayout);
        jDialogTimKiemLayout.setHorizontalGroup(
                jDialogTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jDialogTimKiemLayout.createSequentialGroup()
                                .addGap(69, 69, 69)
                                .addGroup(jDialogTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jDialogTimKiemLayout.createSequentialGroup()
                                                .addGroup(jDialogTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
                                                        .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE))
                                                .addGap(47, 47, 47))
                                        .addGroup(jDialogTimKiemLayout.createSequentialGroup()
                                                .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGap(33, 33, 33)))
                                .addGroup(jDialogTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jDateChooserNgayTraTimKiemFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jDialogTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(txtIDNguoiDocTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, 314, Short.MAX_VALUE)
                                                .addComponent(txtIDPhieuTimKiem)
                                                .addComponent(txtIDNhanVienTimKiem, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 314, Short.MAX_VALUE)
                                                .addGroup(jDialogTimKiemLayout.createSequentialGroup()
                                                        .addComponent(jDateChooserNgayMuonTimKiemFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(26, 26, 26)
                                                        .addGroup(jDialogTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addGroup(jDialogTimKiemLayout.createSequentialGroup()
                                                                        .addComponent(jLabel18)
                                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                        .addComponent(jDateChooserNgayTraTimKiemTo, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addGroup(jDialogTimKiemLayout.createSequentialGroup()
                                                                        .addComponent(jLabel13)
                                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                        .addComponent(jDateChooserNgayMuonTimKiemTo, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                                .addContainerGap(75, Short.MAX_VALUE))
        );
        jDialogTimKiemLayout.setVerticalGroup(
                jDialogTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialogTimKiemLayout.createSequentialGroup()
                                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(70, 70, 70)
                                .addGroup(jDialogTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jDialogTimKiemLayout.createSequentialGroup()
                                                .addGroup(jDialogTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(txtIDPhieuTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel9))
                                                .addGap(21, 21, 21)
                                                .addGroup(jDialogTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(txtIDNguoiDocTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel10))
                                                .addGap(18, 18, 18)
                                                .addGroup(jDialogTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(txtIDNhanVienTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel19))
                                                .addGap(20, 20, 20)
                                                .addGroup(jDialogTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(jDialogTimKiemLayout.createSequentialGroup()
                                                                .addGap(0, 0, Short.MAX_VALUE)
                                                                .addGroup(jDialogTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING)
                                                                        .addComponent(jDateChooserNgayMuonTimKiemFrom, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                        .addComponent(jDateChooserNgayMuonTimKiemTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(jDialogTimKiemLayout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addComponent(jLabel11)))
                                .addGap(18, 18, 18)
                                .addGroup(jDialogTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jDateChooserNgayTraTimKiemTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel12)
                                        .addComponent(jDateChooserNgayTraTimKiemFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel18))
                                .addGap(43, 43, 43)
                                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jDialogTraSach.setTitle("Them");
        jDialogTraSach.setMinimumSize(new java.awt.Dimension(600, 400));

        jLabel3.setText("Danh sách trả");

        jTableXacNhanCTPhieuTra.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{
                        {null, null, null, null, null},
                        {null, null, null, null, null},
                        {null, null, null, null, null},
                        {null, null, null, null, null}
                },
                new String[]{
                        "ID Sách", "Tên sách", "Số lượng mượn", "Số lượng trả", "Giá sách"
                }
        ) {
            Class[] types = new Class[]{
                    java.lang.Object.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean[]{
                    false, false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        jScrollPane4.setViewportView(jTableXacNhanCTPhieuTra);

        btnXacNhan.setText("Xác nhận");
        btnXacNhan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXacNhanActionPerformed(evt);
            }
        });
        jPanel12.add(btnXacNhan);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
                jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 487, Short.MAX_VALUE)
                        .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(0, 0, Short.MAX_VALUE))
                        .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
                jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel10Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel3)
                                .addGap(52, 52, 52)
                                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout cardsThem1Layout = new javax.swing.GroupLayout(cardsThem1);
        cardsThem1.setLayout(cardsThem1Layout);
        cardsThem1Layout.setHorizontalGroup(
                cardsThem1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        cardsThem1Layout.setVerticalGroup(
                cardsThem1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialogTraSachLayout = new javax.swing.GroupLayout(jDialogTraSach.getContentPane());
        jDialogTraSach.getContentPane().setLayout(jDialogTraSachLayout);
        jDialogTraSachLayout.setHorizontalGroup(
                jDialogTraSachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialogTraSachLayout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(cardsThem1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(30, 30, 30))
        );
        jDialogTraSachLayout.setVerticalGroup(
                jDialogTraSachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jDialogTraSachLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(cardsThem1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())
        );

        setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jTablePhieuMuon.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{

                },
                new String[]{
                        "ID", "ID Nhân viên", "Nhân viên", "ID Người đọc", "Người đọc", "Ngày mượn", "Ngày hẹn trả", "Tình trạng"
                }
        ) {
            Class[] types = new Class[]{
                    java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean[]{
                    false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTablePhieuMuon);
        if (jTablePhieuMuon.getColumnModel().getColumnCount() > 0) {
            jTablePhieuMuon.getColumnModel().getColumn(2).setResizable(false);
        }
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);
        jTablePhieuMuon.setDefaultRenderer(String.class, centerRenderer);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel2.setText("PHIẾU MƯỢN");
        jPanel2.add(jLabel2);

        jPanel3.setLayout(new javax.swing.BoxLayout(jPanel3, javax.swing.BoxLayout.LINE_AXIS));

        btnThem.setText("MƯỢN SÁCH");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        jPanel3.add(btnThem);
        jPanel3.add(filler2);

        btnXoa.setText("XOÁ");
        btnXoa.setInheritsPopupMenu(true);
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        jPanel3.add(btnXoa);
        jPanel3.add(filler8);

        btnTraSach.setText("TRẢ SÁCH");
        btnTraSach.setInheritsPopupMenu(true);
        btnTraSach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTraSachActionPerformed(evt);
            }
        });
        jPanel3.add(btnTraSach);
        jPanel3.add(filler9);

        btnTaiLai.setText("TẢI LẠI");
        btnTaiLai.setInheritsPopupMenu(true);
        btnTaiLai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaiLaiActionPerformed(evt);
            }
        });
        jPanel3.add(btnTaiLai);
        jPanel3.add(filler7);

        btnTimKiem.setText("TÌM KIẾM");
        btnTimKiem.setInheritsPopupMenu(true);
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });
        jPanel3.add(btnTimKiem);
        jPanel3.add(filler6);

        btnXem.setText("XEM CHI TIẾT");
        btnXem.setInheritsPopupMenu(true);
        btnXem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXemActionPerformed(evt);
            }
        });
        jPanel3.add(btnXem);

        jPanel4.add(jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 742, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 742, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 618, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addContainerGap(674, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // Mở dialog thêm phiếu mượn
        clearAll();
        loadDB();
        jDialogThem.setVisible(true);
        jDialogThem.setLocationRelativeTo(null);
        newPhieuMuonDTO = new PhieuMuonDTO();
        newPhieuMuonDTO.setId_pm(MyConnection.getLastRecordId(PhieuMuonDAO.TABLE_NAME) + 1);
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnXemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXemActionPerformed
        clearAll();
        int selectedRow = jTablePhieuMuon.getSelectedRow();
        if (selectedRow == -1) { // Check
            JOptionPane.showMessageDialog(this, "Vui lòng chọn dòng cần xem");
            return;
        }

        int idPhieuMuon = (int) jTablePhieuMuon.getValueAt(selectedRow, 0);
        PhieuMuonBUS phieuMuonBUS = new PhieuMuonBUS();
        CTPhieuMuonBUS ctPhieuMuonBUS = new CTPhieuMuonBUS();
        PhieuMuonDTO phieuMuonDTO = phieuMuonBUS.findOne(idPhieuMuon);
        NguoiDocDTO nguoiDocTrongPhieuMuonDTO = new NguoiDocBUS().findOne(phieuMuonDTO.getId_ND());
        NhanVienDTO nhanVienTrongPhieuMuonDTO = new NhanVienBUS().findOne(phieuMuonDTO.getId_nv());
        Map<CTPhieuMuonDTO, SachDTO> listCTPhieuMuonVaSach = ctPhieuMuonBUS.findManyJoinSach(idPhieuMuon);
        // Set text to textField
        txtIDPhieuXem.setText(String.valueOf(phieuMuonDTO.getId_pm()));
        txtIDNguoiDocXem.setText(nguoiDocTrongPhieuMuonDTO.getHoTen());
        txtIDNhanVienXem.setText(nhanVienTrongPhieuMuonDTO.getHoTen_NV());
        SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
        txtNgayMuonXem.setText(formatter.format(phieuMuonDTO.getNgay_muon()));
        txtNgayTraXem.setText(formatter.format(phieuMuonDTO.getNgay_Tra()));
        // Set row to jTable
        DefaultTableModel xemChiTietModel = (DefaultTableModel) jTableXemChiTiet.getModel();
        xemChiTietModel.setRowCount(0);
        listCTPhieuMuonVaSach.forEach((ctPhieuMuonDTO, sachDTO) -> {
            xemChiTietModel.addRow(new Object[]{
                    sachDTO.getId(),
                    sachDTO.getTenSach(),
                    ctPhieuMuonDTO.getSoLuong(),
            });
        });
        // Show
        jDialogXemChiTiet.setVisible(true);
        jDialogXemChiTiet.setLocationRelativeTo(null);
    }//GEN-LAST:event_btnXemActionPerformed

    private void btnXacNhanThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXacNhanThemActionPerformed
        if (!Helpler.checkTextFieldNumber(txtIdNguoiDocThem, "Id người đọc", jDialogThem)) {
            return;
        }

        long idNguoiDoc = Long.parseLong(txtIdNguoiDocThem.getText());
        NguoiDocBUS nguoiDocBUS = new NguoiDocBUS();
        NguoiDocDTO nguoiDocDTO = nguoiDocBUS.findOne(idNguoiDoc);
        if (nguoiDocDTO == null) {
            JOptionPane.showMessageDialog(jDialogThem, "Nguoi doc id = " + idNguoiDoc + " khong ton tai");
            return;
        }

        // if listCTPhieuMuon is empty
        if (newPhieuMuonDTO.getListCTPhieuMuon().isEmpty()) {
            JOptionPane.showMessageDialog(jDialogThem, "Danh sách mượn không được để trống");
            return;
        }

        SachBUS sachBUS = new SachBUS();
        int tongSoLuongMuon = 0;
        for (CTPhieuMuonDTO ctPhieuMuonDTO : newPhieuMuonDTO.getListCTPhieuMuon()) {
            tongSoLuongMuon += ctPhieuMuonDTO.getSoLuong();
            SachDTO sachDTO = sachBUS.findone(ctPhieuMuonDTO.getIdSach());
            if (ctPhieuMuonDTO.getSoLuong() > sachDTO.getSoluong()) {
                JOptionPane.showMessageDialog(jDialogThem, String.format("Số lượng mượn của sách '%s' không được lớn hơn số lượng trong kho", sachDTO.getTenSach()));
                return;
            }
        }

        // Nếu người đọc quá hạn sử dụng thì không cho mượn
        if (nguoiDocDTO.getHanSuDung().isBefore(LocalDate.now())) {
            JOptionPane.showMessageDialog(jDialogThem, String.format("Người đọc '%s' không thể mượn sách vì quá hạn sử dụng vào ngày %s", nguoiDocDTO.getHoTen(), nguoiDocDTO.getHanSuDung()));
            return;
        }

        if (nguoiDocDTO.getSoLuongMuonChoPhep() < tongSoLuongMuon) {
            JOptionPane.showMessageDialog(jDialogThem, "Tổng số lượng sách người đọc " + idNguoiDoc + " mượn không được vượt quá số lượng cho phép!");
            return;
        }

        newPhieuMuonDTO.setId_nv(BaseUI.nhanVienDangNhap.getID_NV());
        newPhieuMuonDTO.setNgay_muon(java.sql.Date.valueOf(LocalDate.now()));
        newPhieuMuonDTO.setNgay_Tra(java.sql.Date.valueOf(LocalDate.now().plusDays(15)));
        newPhieuMuonDTO.setId_ND(idNguoiDoc);
        newPhieuMuonDTO.setTinhTrang(PhieuMuonDTO.TinhTrang.CHUA_TRA);

        baseUI.setCard("phieuMuonGUI", "Phiếu mượn");

        // Thêm phiếu mượn
        PhieuMuonBUS phieuMuonBUS = new PhieuMuonBUS();
        CTPhieuMuonBUS ctPhieuMuonBUS = new CTPhieuMuonBUS();
        phieuMuonBUS.insertOne(newPhieuMuonDTO);
        newPhieuMuonDTO.getListCTPhieuMuon().forEach(ctPhieuMuonDTO -> {
            // Cap nhat so luong muon cua nguoi doc
            nguoiDocDTO.setSoLuongMuonChoPhep(nguoiDocDTO.getSoLuongMuonChoPhep() - ctPhieuMuonDTO.getSoLuong());
            nguoiDocBUS.updateOne(nguoiDocDTO);
            ctPhieuMuonBUS.insertOne(ctPhieuMuonDTO);
        });
        jDialogThem.setVisible(false);
        setTableItemList();
        clearAll();
    }//GEN-LAST:event_btnXacNhanThemActionPerformed

    private void btnThemVaoCTMuonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemVaoCTMuonActionPerformed
        if (!Helpler.checkTextFieldNumber(txtIdNguoiDocThem, "Id người đọc", jDialogThem)) {
            return;
        }
        if (!Helpler.checkTextFieldNumber(txtIdSachThem, "ID sách", jDialogThem)) {
            return;
        }
        if (txtIdSoLuong.getText().isEmpty()) {
            JOptionPane.showMessageDialog(jDialogThem, "Vui lòng nhập số lượng mượn");
            return;
        }

        if (!Helpler.checkTextFieldNumber(txtIdSoLuong, "Số lượng mượn", jDialogThem)) {
            return;
        }

        int idSach = Integer.parseInt(txtIdSachThem.getText());
        SachDTO sachDTO = new SachBUS().findone(idSach);
        long idNguoiDoc = Long.parseLong(txtIdNguoiDocThem.getText());
        NguoiDocBUS nguoiDocBUS = new NguoiDocBUS();
        NguoiDocDTO nguoiDocDTO = nguoiDocBUS.findOne(idNguoiDoc);

        if (nguoiDocDTO == null) {
            JOptionPane.showMessageDialog(jDialogThem, "Nguoi doc id = " + idNguoiDoc + " khong ton tai");
            return;
        }

        if (sachDTO == null) {
            JOptionPane.showMessageDialog(jDialogThem, "Sách id = " + idSach + " không tồn tại");
            return;
        }

        if (sachDTO.getTrangThaiSach() == SachDTO.TrangThaiSach.HET_SACH) {
            JOptionPane.showMessageDialog(jDialogThem, "Sách đã hết trong kho");
            return;
        }

        if (sachDTO.getTrangThaiSach() == SachDTO.TrangThaiSach.DANG_NHAP_KHO) {
            JOptionPane.showMessageDialog(jDialogThem, "Sách đang nhập kho không thể mượn");
            return;
        }

        int soLuong = Integer.parseInt(txtIdSoLuong.getText());

        if (soLuong > sachDTO.getSoluong()) {
            JOptionPane.showMessageDialog(jDialogThem, "Số lượng mượn không được lớn hơn số lượng trong kho");
            return;
        }

        for (CTPhieuMuonDTO ctPhieuMuonDTO : newPhieuMuonDTO.getListCTPhieuMuon()) {
            if (ctPhieuMuonDTO.getIdSach() == idSach) {
                JOptionPane.showMessageDialog(jDialogThem, "Sách id = " + ctPhieuMuonDTO.getIdSach() + " đã thêm vào chi tiết phiếu muọn");
                return;
            }
        }

        newPhieuMuonDTO.getListCTPhieuMuon().add(new CTPhieuMuonDTO(
                idSach, newPhieuMuonDTO.getId_pm(), soLuong
        ));

        DefaultTableModel defaultTableModel = (DefaultTableModel) jTableChiTietPhieuMuon.getModel();
        defaultTableModel.setRowCount(0);
        newPhieuMuonDTO.getListCTPhieuMuon().forEach(ctPhieuMuonDTO -> {
            SachDTO sachTrongPhieuMuon = new SachBUS().findone(ctPhieuMuonDTO.getIdSach());
            defaultTableModel.addRow(new Object[]{
                    ctPhieuMuonDTO.getIdSach(),
                    sachTrongPhieuMuon.getTenSach(),
                    ctPhieuMuonDTO.getSoLuong(),
                    sachDTO.getSoluong()
            });
        });
    }//GEN-LAST:event_btnThemVaoCTMuonActionPerformed

    private void btnXacNhanTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXacNhanTimKiemActionPerformed
        // Check
        if (txtIDPhieuTimKiem.getText().isEmpty()
                && txtIDNguoiDocTimKiem.getText().isEmpty()
                && jDateChooserNgayMuonTimKiemFrom.getDate() == null
                && jDateChooserNgayMuonTimKiemTo.getDate() == null
                && txtIDNhanVienTimKiem.getText().isEmpty()
                && jDateChooserNgayTraTimKiemFrom.getDate() == null
                && jDateChooserNgayTraTimKiemTo.getDate() == null
        ) {
            JOptionPane.showMessageDialog(jDialogTimKiem, "Vui lòng ít nhất chọn 1 điều kiện");
            return;
        }


        int idPhieu, idNhanVien;
        long idNguoiDoc;
        if (txtIDPhieuTimKiem.getText().isEmpty()) {
            idPhieu = -1;
        } else {
            if (!Helpler.checkTextFieldNumber(txtIDPhieuTimKiem, "ID phiếu", jDialogTimKiem)) {
                return;
            }

            idPhieu = Integer.parseInt(txtIDPhieuTimKiem.getText());
        }

        if (txtIDNguoiDocTimKiem.getText().isEmpty()) {
            idNguoiDoc = -1;
        } else {
            if (!Helpler.checkTextFieldNumber(txtIDNguoiDocTimKiem, "ID người đọc", jDialogTimKiem)) {
                return;
            }

            idNguoiDoc = Long.parseLong(txtIDNguoiDocTimKiem.getText());
        }

        if (txtIDNhanVienTimKiem.getText().isEmpty()) {
            idNhanVien = -1;
        } else {
            if (!Helpler.checkTextFieldNumber(txtIDNhanVienTimKiem, "ID nhân viên", jDialogTimKiem)) {
                return;
            }

            idNhanVien = Integer.parseInt(txtIDNhanVienTimKiem.getText());
        }

        // Check date
        Date ngayMuonFrom = jDateChooserNgayMuonTimKiemFrom.getDate();
        Date ngayMuonTo = jDateChooserNgayMuonTimKiemTo.getDate();
        if (ngayMuonFrom != null && ngayMuonTo != null) {
            if (ngayMuonFrom.after(ngayMuonTo)) {
                JOptionPane.showMessageDialog(jDialogTimKiem, "Ngày mượn không hợp lệ");
                return;
            }
        }

        Date ngayTraFrom = jDateChooserNgayTraTimKiemFrom.getDate();
        Date ngayTraTo = jDateChooserNgayTraTimKiemTo.getDate();
        if (ngayTraFrom != null && ngayTraTo != null) {
            if (ngayTraFrom.after(ngayTraTo)) {
                JOptionPane.showMessageDialog(jDialogTimKiem, "Ngày trả không hợp lệ");
                return;
            }
        }

        // Find many
        PhieuMuonBUS phieuMuonBUS = new PhieuMuonBUS();
        ArrayList<PhieuMuonDTO> listPhieuMuon = phieuMuonBUS.findMany(
                idPhieu, idNguoiDoc, idNhanVien,
                ngayMuonFrom, ngayMuonTo,
                ngayTraFrom, ngayTraTo
        );

        //Close
        jDialogTimKiem.setVisible(false);
        //Show
        setTableItemList(listPhieuMuon);
    }//GEN-LAST:event_btnXacNhanTimKiemActionPerformed

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        clearAll();
        jDialogTimKiem.setVisible(true);
        jDialogTimKiem.setLocationRelativeTo(null);
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void btnTaiLaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaiLaiActionPerformed
        setTableItemList();
    }//GEN-LAST:event_btnTaiLaiActionPerformed

    private void btnKiemTraNguoiDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKiemTraNguoiDocActionPerformed
        if (!Helpler.checkTextFieldNumber(txtIdNguoiDocThem, "Id người đọc", jDialogThem)) {
            return;
        }

        long idNguoiDoc = Long.parseLong(txtIdNguoiDocThem.getText());
        NguoiDocBUS nguoiDocBUS = new NguoiDocBUS();
        NguoiDocDTO nguoiDocDTO = nguoiDocBUS.findOne(idNguoiDoc);

        if (nguoiDocDTO == null) {
            JOptionPane.showMessageDialog(jDialogThem, "Nguoi doc id = " + idNguoiDoc + " khong ton tai");
            return;
        }

        lbTieuDeMuon.setText(String.format("Danh sách chi tiết mượn của %s với số lượng mượn cho phép: %d", nguoiDocDTO.getHoTen(), nguoiDocDTO.getSoLuongMuonChoPhep()));


    }//GEN-LAST:event_btnKiemTraNguoiDocActionPerformed

    private void btnTraSachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTraSachActionPerformed
        clearAll();

        int selectedRow = jTablePhieuMuon.getSelectedRow();
        if (selectedRow == -1) { // Check
            JOptionPane.showMessageDialog(this, "Vui lòng chọn dòng cần trả sách");
            return;
        }


        int idPhieuMuon = (int) jTablePhieuMuon.getValueAt(selectedRow, 0);

        PhieuTraBUS phieuTraBUS = new PhieuTraBUS();
        if (phieuTraBUS.findByIdPhieuMuon(idPhieuMuon) != null) {
            JOptionPane.showMessageDialog(this, "Phiếu mượn đã trả");
            return;
        }

        PhieuMuonBUS phieuMuonBUS = new PhieuMuonBUS();
        CTPhieuMuonBUS ctPhieuMuonBUS = new CTPhieuMuonBUS();
        phieuMuonChuanBiTra = phieuMuonBUS.findOne(idPhieuMuon);
        Map<CTPhieuMuonDTO, SachDTO> listCTPhieuMuonVaSach = ctPhieuMuonBUS.findManyJoinSach(idPhieuMuon);
        // insert into table
        DefaultTableModel xacNhanCTPhieuTraModel = (DefaultTableModel) jTableXacNhanCTPhieuTra.getModel();
        xacNhanCTPhieuTraModel.setRowCount(0);
        listCTPhieuMuonVaSach.forEach((ctPhieuMuonDTO, sachDTO) -> {
            xacNhanCTPhieuTraModel.addRow(new Object[]{
                    sachDTO.getId(),
                    sachDTO.getTenSach(),
                    ctPhieuMuonDTO.getSoLuong(),
                    "",
                    sachDTO.getGiaSach()
            });
        });

        jDialogTraSach.setVisible(true);
        jDialogTraSach.setLocationRelativeTo(null);
    }//GEN-LAST:event_btnTraSachActionPerformed

    private void btnXacNhanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXacNhanActionPerformed
        // Get all rows in the table to CTPhieuTraDTO
        int rowCount = jTableXacNhanCTPhieuTra.getRowCount();
        int tienPhat = 0;
        int tongSoLuongMuon = 0;
        int tongSoLuongTra = 0;


        PhieuTraDTO phieuTraDTOCanThem = new PhieuTraDTO(
                MyConnection.getLastRecordId(PhieuTraDAO.TABLE_NAME) + 1,
                phieuMuonChuanBiTra.getId_ND(),
                LocalDate.now(),
                0,
                phieuMuonChuanBiTra.getId_pm()
        );
        int soNgayTre = (int) (LocalDate.now().toEpochDay() - phieuMuonChuanBiTra.getNgay_Tra().toLocalDate().toEpochDay());

        for (int row = 0; row < rowCount; row++) {
            int idSach = (int) jTableXacNhanCTPhieuTra.getValueAt(row, 0);
            int idPhieuTra = phieuTraDTOCanThem.getId();
            int soLuongMuon = (int) jTableXacNhanCTPhieuTra.getValueAt(row, 2);
            int soLuongTra = -1;
            try {
                soLuongTra = (int) jTableXacNhanCTPhieuTra.getValueAt(row, 3);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Chưa nhập số lượng trả ở sách id = " + idSach);
                return;
            }

            if (soLuongTra < 0) {
                JOptionPane.showMessageDialog(this, "Số lượng trả không được âm");
                return;
            }

            if (soLuongTra > soLuongMuon) {
                JOptionPane.showMessageDialog(this, "Số lượng trả lớn hơn số lượng mượn");
                return;
            }

            float giaSach = (float) jTableXacNhanCTPhieuTra.getValueAt(row, 4);
            // Tính tiền phạt
            tienPhat += (soLuongMuon - soLuongTra) * giaSach;
            if (soNgayTre > 0) {
                tienPhat += soNgayTre * 0.1 * giaSach * soLuongMuon;
            }

            tongSoLuongMuon += soLuongMuon;
            tongSoLuongTra += soLuongTra;

            CTPhieuTraDTO ctPhieuTraDTO = new CTPhieuTraDTO(idSach, idPhieuTra, soLuongTra, 0);
            phieuTraDTOCanThem.getListCTPhieuTra().add(ctPhieuTraDTO);

        }
        phieuTraDTOCanThem.setTienPhat(tienPhat);

        if (tongSoLuongMuon == tongSoLuongTra) {
            phieuMuonChuanBiTra.setTinhTrang(PhieuMuonDTO.TinhTrang.DA_TRA);
        } else {
            phieuMuonChuanBiTra.setTinhTrang(PhieuMuonDTO.TinhTrang.TRA_THIEU);
            // Vi pham
            NguoiDocDTO nguoiDocDTO = new NguoiDocBUS().findOne(phieuTraDTOCanThem.getIdNguoiDoc());
            nguoiDocDTO.setTrangThaiViPham(NguoiDocDTO.TrangThaiViPham.VI_PHAM);
            new NguoiDocBUS().updateOne(nguoiDocDTO);
        }
        // Trả trễ hạn thì đổi thành trạng thái vi phạm
        if (soNgayTre > 0) {
            // Vi pham
            NguoiDocDTO nguoiDocDTO = new NguoiDocBUS().findOne(phieuTraDTOCanThem.getIdNguoiDoc());
            nguoiDocDTO.setTrangThaiViPham(NguoiDocDTO.TrangThaiViPham.VI_PHAM);
            new NguoiDocBUS().updateOne(nguoiDocDTO);
        }

        new PhieuMuonBUS().updateOne(phieuMuonChuanBiTra);

        //insert PhieuTra
        PhieuTraBUS phieuTraBUS = new PhieuTraBUS();
        phieuTraBUS.insertOne(phieuTraDTOCanThem);
        CTPhieuTraBUS ctPhieuTraBUS = new CTPhieuTraBUS();
        phieuTraDTOCanThem.getListCTPhieuTra().forEach(ctPhieuTraDTO -> {
            ctPhieuTraBUS.insertOne(ctPhieuTraDTO);
            // update so luong sach
            SachBUS sachBUS = new SachBUS();
            SachDTO sachDTO = sachBUS.findone(ctPhieuTraDTO.getIdSach());
            sachDTO.setSoluong(sachDTO.getSoluong() + ctPhieuTraDTO.getSoLuong());
            if (sachDTO.getTrangThaiSach() == SachDTO.TrangThaiSach.HET_SACH && sachDTO.getSoluong() > 0) {
                sachDTO.setTrangthai(SachDTO.TrangThaiSach.CO_THE_MUON.ordinal());
            }
            sachBUS.update(sachDTO);

            // cap nhat so luong muon cua nguoi doc
            NguoiDocBUS nguoiDocBUS = new NguoiDocBUS();
            NguoiDocDTO nguoiDocDTO = nguoiDocBUS.findOne(phieuTraDTOCanThem.getIdNguoiDoc());
            nguoiDocDTO.setSoLuongMuonChoPhep(nguoiDocDTO.getSoLuongMuonChoPhep() + ctPhieuTraDTO.getSoLuong());
            nguoiDocBUS.updateOne(nguoiDocDTO);
        });

        jDialogTraSach.setVisible(false);
        setTableItemList();
        clearAll();
        JOptionPane.showMessageDialog(this, "Thêm thành công");

    }//GEN-LAST:event_btnXacNhanActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        int selectedRow = jTablePhieuMuon.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn dòng cần xóa");
            return;
        }

        Object obj = jTablePhieuMuon.getValueAt(selectedRow, 0);
        int idPhieuMuon = Integer.parseInt(obj.toString());

        PhieuMuonBUS phieuMuonBUS = new PhieuMuonBUS();
        PhieuMuonDTO phieuMuonDTO = phieuMuonBUS.findOne(idPhieuMuon);
        CTPhieuMuonBUS ctPhieuMuonBUS = new CTPhieuMuonBUS();
        PhieuTraBUS phieuTraBUS = new PhieuTraBUS();

        if (phieuTraBUS.findByIdPhieuMuon(idPhieuMuon) != null) {
            JOptionPane.showMessageDialog(this, "Không thể xóa phiếu mượn vì đang có phiếu trả");
        }

        if (phieuMuonDTO.getTinhTrang() == PhieuMuonDTO.TinhTrang.CHUA_TRA) {
            int confirm = JOptionPane.showConfirmDialog(this, "Còn sách chưa trả, bạn có chắc muốn xoá không?");
            if (confirm == JOptionPane.NO_OPTION || confirm == JOptionPane.CLOSED_OPTION) {
                return;
            }
        } else {
            if (!Helpler.showConfirmDialog(this,
                    String.format("Bạn có chắc chắn muốn xoá phiếu mượn có ID = %s không?", idPhieuMuon), "Xoá phiếu mượn")) {
                return;
            }
        }
        SachBUS sachBUS = new SachBUS();
        NguoiDocBUS nguoiDocBUS = new NguoiDocBUS();

        Map<CTPhieuMuonDTO, SachDTO> listCTPhieuMuonVaSach = ctPhieuMuonBUS.findManyJoinSach(idPhieuMuon);
        // Delete all ctphieumuon link to phieumuon
        listCTPhieuMuonVaSach.forEach(((ctPhieuMuonDTO, sachDTO) -> {
            sachDTO.setSoluong(sachDTO.getSoluong() + ctPhieuMuonDTO.getSoLuong());
            if (sachDTO.getTrangThaiSach() == SachDTO.TrangThaiSach.HET_SACH) {
                sachDTO.setTrangthai(SachDTO.TrangThaiSach.CO_THE_MUON.ordinal());
            }
            NguoiDocDTO nguoiDocDTO = new NguoiDocDTO();
            nguoiDocDTO.setSoLuongMuonChoPhep(nguoiDocDTO.getSoLuongMuonChoPhep() + ctPhieuMuonDTO.getSoLuong());
            nguoiDocBUS.updateOne(nguoiDocDTO);
            sachBUS.update(sachDTO);
            ctPhieuMuonBUS.deleteOne(ctPhieuMuonDTO.getIdSach(), ctPhieuMuonDTO.getIdPhieuMuon());
        }));


        // delete phieuMuon
        phieuMuonBUS.deleteOne(phieuMuonDTO.getId_pm());

        setTableItemList();
        JOptionPane.showMessageDialog(this, "Xoá thành công");
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnThemSachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemSachActionPerformed
        baseUI.setCard("sachGUI", "Sách");
    }//GEN-LAST:event_btnThemSachActionPerformed

    private void btnTimNguoiDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimNguoiDocActionPerformed
        baseUI.setCard("nguoiDocGUI", "Người đọc");
    }//GEN-LAST:event_btnTimNguoiDocActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnKiemTraNguoiDoc;
    private javax.swing.JButton btnTaiLai;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThemSach;
    private javax.swing.JButton btnThemVaoCTMuon;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnTimNguoiDoc;
    private javax.swing.JButton btnTraSach;
    private javax.swing.JButton btnXacNhan;
    private javax.swing.JButton btnXacNhanThem;
    private javax.swing.JButton btnXacNhanTimKiem;
    private javax.swing.JButton btnXem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JPanel cardsThem;
    private javax.swing.JPanel cardsThem1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.Box.Filler filler6;
    private javax.swing.Box.Filler filler7;
    private javax.swing.Box.Filler filler8;
    private javax.swing.Box.Filler filler9;
    private com.toedter.calendar.JDateChooser jDateChooserNgayMuonTimKiemFrom;
    private com.toedter.calendar.JDateChooser jDateChooserNgayMuonTimKiemTo;
    private com.toedter.calendar.JDateChooser jDateChooserNgayTraTimKiemFrom;
    private com.toedter.calendar.JDateChooser jDateChooserNgayTraTimKiemTo;
    private javax.swing.JDialog jDialogThem;
    private javax.swing.JDialog jDialogTimKiem;
    private javax.swing.JDialog jDialogTraSach;
    private javax.swing.JDialog jDialogXemChiTiet;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTableChiTietPhieuMuon;
    private javax.swing.JTable jTablePhieuMuon;
    private javax.swing.JTable jTableXacNhanCTPhieuTra;
    private javax.swing.JTable jTableXemChiTiet;
    private javax.swing.JLabel lbTieuDeMuon;
    private javax.swing.JTextField txtIDNguoiDocTimKiem;
    private javax.swing.JTextField txtIDNguoiDocXem;
    private javax.swing.JTextField txtIDNhanVienTimKiem;
    private javax.swing.JTextField txtIDNhanVienXem;
    private javax.swing.JTextField txtIDPhieuTimKiem;
    private javax.swing.JTextField txtIDPhieuXem;
    private javax.swing.JTextField txtIdNguoiDocThem;
    private javax.swing.JTextField txtIdSachThem;
    private javax.swing.JTextField txtIdSoLuong;
    private javax.swing.JTextField txtNgayMuonXem;
    private javax.swing.JTextField txtNgayTraXem;
    // End of variables declaration//GEN-END:variables
}
