/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import BUS.*;
import DAO.MyConnection;
import DAO.PhieuTraDAO;
import DTO.*;
import Helpler.Helpler;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.time.LocalDate;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Date;
import java.util.Map;

/**
 * @author pc
 */
public class PhieuTraGUI extends javax.swing.JPanel {

    /**
     * Creates new form PhieuTraGUI
     */
    private DefaultTableModel phieuTraModel;
    private PhieuTraDTO phieuTraDTOCanThem;
    private PhieuMuonDTO phieuMuonDTO;
    private NhanVienDTO nhanVienDangNhap;

    public PhieuTraGUI(NhanVienDTO nhanVienDangNhap) {
        initComponents();
        Helpler.centerCell(jTablePhieuTra);
        Helpler.centerCell(jTableXacNhanCTPhieuTra);
        Helpler.centerCell(jTableXemChiTiet);

        if (nhanVienDangNhap.getVaiTro() != NhanVienDTO.VaiTro.QUAN_LY.ordinal()) {
            btnXoa.setEnabled(false);
        }

        setTableItemList();
        // Format date
        jDateChooserNgayTraTimKiemFrom.setDateFormatString("dd/MM/yyyy");
        jDateChooserNgayTraTimKiemTo.setDateFormatString("dd/MM/yyyy");
        jDateChooserNgayTraXem.setDateFormatString("dd/MM/yyyy");
    }

    public void loadNguoiDoc() {
    }

    //Find all and insert into the table
    public void setTableItemList() {
        phieuTraModel = (DefaultTableModel) jTablePhieuTra.getModel();
        phieuTraModel.setRowCount(0);
        PhieuTraBUS phieuTraBUS = new PhieuTraBUS();
        ArrayList<PhieuTraDTO> listPhieuTra = phieuTraBUS.findAll();
        listPhieuTra.forEach(phieuTraDTO -> {
            phieuTraModel.addRow(new Object[]{
                    phieuTraDTO.getId(),
                    phieuTraDTO.getIdPhieuMuon(),
                    phieuTraDTO.getIdNguoiDoc(),
                    phieuTraDTO.getNguoiDocDTO().getHoTen(),
                    phieuTraDTO.getNgayTraThatSu().format(DateTimeFormatter.ofPattern("dd/MM/yyyy")),
                    phieuTraDTO.getTienPhat()
            });
        });
    }

    public void clearAll() {
        //Dialog them
        txtIdPhieuMuon.setText("");
        DefaultTableModel xacNhanCTPhieuTraModel = (DefaultTableModel) jTableXacNhanCTPhieuTra.getModel();
        xacNhanCTPhieuTraModel.setRowCount(0);
//        txtIdNguoiDocThem.setText("");
        //Dialog Xem
        txtIDPhieuXem.setText("");
        txtIDNguoiDocXem.setText("");
        jDateChooserNgayTraXem.setDate(null);
        txtTienPhatXem.setText("");
        //Dialog Tim kiem
        txtIDPhieuTimKiem.setText("");
        txtTienPhatTimKiemFrom.setText("");
        txtIDNguoiDocTimKiem.setText("");
        txtTienPhatTimKiemTo.setText("");
        jDateChooserNgayTraTimKiemFrom.setDate(null);
        jDateChooserNgayTraTimKiemTo.setDate(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialogThem = new javax.swing.JDialog();
        cardsThem = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtIdPhieuMuon = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableXacNhanCTPhieuTra = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        btnHienThiDanhSachTra = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        btnXacNhan = new javax.swing.JButton();
        jDialogXemChiTiet = new javax.swing.JDialog();
        jLabel5 = new javax.swing.JLabel();
        txtIDPhieuXem = new javax.swing.JTextField();
        txtIDNguoiDocXem = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableXemChiTiet = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtTienPhatXem = new javax.swing.JTextField();
        jDateChooserNgayTraXem = new com.toedter.calendar.JDateChooser();
        jDialogTimKiem = new javax.swing.JDialog();
        jPanel8 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtIDPhieuTimKiem = new javax.swing.JTextField();
        txtIDNguoiDocTimKiem = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jDateChooserNgayTraTimKiemFrom = new com.toedter.calendar.JDateChooser();
        jLabel11 = new javax.swing.JLabel();
        txtTienPhatTimKiemFrom = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        btnXacNhanTimKiem = new javax.swing.JButton();
        txtTienPhatTimKiemTo = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jDateChooserNgayTraTimKiemTo = new com.toedter.calendar.JDateChooser();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePhieuTra = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        filler5 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        btnTimKiem = new javax.swing.JButton();
        filler4 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        btnXem = new javax.swing.JButton();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        btnHuyTimKiem = new javax.swing.JButton();
        filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        btnXoa = new javax.swing.JButton();

        jDialogThem.setTitle("Them");
        jDialogThem.setMinimumSize(new java.awt.Dimension(600, 400));

        jLabel1.setText("ID Phiếu mượn");

        jLabel3.setText("Danh sách trả");

        jTableXacNhanCTPhieuTra.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID Sách", "Tên sách", "Số lượng mượn", "Số lượng trả", "Tình trạng", "Giá sách"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTableXacNhanCTPhieuTra);
        if (jTableXacNhanCTPhieuTra.getColumnModel().getColumnCount() > 0) {
            jTableXacNhanCTPhieuTra.getColumnModel().getColumn(0).setMaxWidth(80);
            jTableXacNhanCTPhieuTra.getColumnModel().getColumn(4).setMaxWidth(100);
        }

        btnHienThiDanhSachTra.setText("Hiển thị danh sách trả");
        btnHienThiDanhSachTra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHienThiDanhSachTraActionPerformed(evt);
            }
        });
        jPanel5.add(btnHienThiDanhSachTra);

        btnXacNhan.setText("Xác nhận");
        btnXacNhan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXacNhanActionPerformed(evt);
            }
        });
        jPanel6.add(btnXacNhan);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 487, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtIdPhieuMuon, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtIdPhieuMuon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout cardsThemLayout = new javax.swing.GroupLayout(cardsThem);
        cardsThem.setLayout(cardsThemLayout);
        cardsThemLayout.setHorizontalGroup(
            cardsThemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        cardsThemLayout.setVerticalGroup(
            cardsThemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialogThemLayout = new javax.swing.GroupLayout(jDialogThem.getContentPane());
        jDialogThem.getContentPane().setLayout(jDialogThemLayout);
        jDialogThemLayout.setHorizontalGroup(
            jDialogThemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialogThemLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(cardsThem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(30, 30, 30))
        );
        jDialogThemLayout.setVerticalGroup(
            jDialogThemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogThemLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cardsThem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jDialogXemChiTiet.setTitle("Xem chi tiết");
        jDialogXemChiTiet.setMinimumSize(new java.awt.Dimension(600, 400));

        jLabel5.setText("ID phiếu");

        txtIDPhieuXem.setEnabled(false);

        txtIDNguoiDocXem.setEnabled(false);

        jLabel6.setText("ID người đọc");

        jTableXemChiTiet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID sách", "Tên sách", "Số lượng trả"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTableXemChiTiet);
        if (jTableXemChiTiet.getColumnModel().getColumnCount() > 0) {
            jTableXemChiTiet.getColumnModel().getColumn(0).setMaxWidth(100);
        }

        jLabel14.setText("Ngày trả thực tế");

        jLabel15.setText("Tiền phạt");

        txtTienPhatXem.setEnabled(false);

        jDateChooserNgayTraXem.setFocusable(false);

        javax.swing.GroupLayout jDialogXemChiTietLayout = new javax.swing.GroupLayout(jDialogXemChiTiet.getContentPane());
        jDialogXemChiTiet.getContentPane().setLayout(jDialogXemChiTietLayout);
        jDialogXemChiTietLayout.setHorizontalGroup(
            jDialogXemChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
            .addGroup(jDialogXemChiTietLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDialogXemChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jDialogXemChiTietLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(48, 48, 48)
                        .addComponent(txtIDPhieuXem, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jDialogXemChiTietLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(txtIDNguoiDocXem)))
                .addGap(18, 18, 18)
                .addGroup(jDialogXemChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jDialogXemChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtTienPhatXem, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                    .addComponent(jDateChooserNgayTraXem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jDialogXemChiTietLayout.setVerticalGroup(
            jDialogXemChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogXemChiTietLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDialogXemChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDialogXemChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(txtIDPhieuXem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel14))
                    .addComponent(jDateChooserNgayTraXem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jDialogXemChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtIDNguoiDocXem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(txtTienPhatXem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jDialogTimKiem.setMinimumSize(new java.awt.Dimension(600, 400));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel7.setText("Tìm kiếm");
        jPanel8.add(jLabel7);

        jLabel8.setText("ID phiếu");

        jLabel9.setText("ID người đọc");

        jLabel10.setText("Ngày trả");

        jLabel11.setText("Tiền phạt khoảng từ");

        btnXacNhanTimKiem.setText("Xác nhận tìm kiếm");
        btnXacNhanTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXacNhanTimKiemActionPerformed(evt);
            }
        });
        jPanel9.add(btnXacNhanTimKiem);

        jLabel12.setText("Đến");
        jLabel12.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel12.setInheritsPopupMenu(false);

        jLabel13.setText("Đến");
        jLabel13.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel13.setInheritsPopupMenu(false);

        javax.swing.GroupLayout jDialogTimKiemLayout = new javax.swing.GroupLayout(jDialogTimKiem.getContentPane());
        jDialogTimKiem.getContentPane().setLayout(jDialogTimKiemLayout);
        jDialogTimKiemLayout.setHorizontalGroup(
            jDialogTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jDialogTimKiemLayout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addGroup(jDialogTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(47, 47, 47)
                .addGroup(jDialogTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jDialogTimKiemLayout.createSequentialGroup()
                        .addGroup(jDialogTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jDateChooserNgayTraTimKiemFrom, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                            .addComponent(txtTienPhatTimKiemFrom))
                        .addGap(26, 26, 26)
                        .addGroup(jDialogTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13))
                        .addGap(26, 26, 26)
                        .addGroup(jDialogTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jDateChooserNgayTraTimKiemTo, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                            .addComponent(txtTienPhatTimKiemTo)))
                    .addComponent(txtIDNguoiDocTimKiem)
                    .addComponent(txtIDPhieuTimKiem))
                .addContainerGap(75, Short.MAX_VALUE))
            .addComponent(jPanel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jDialogTimKiemLayout.setVerticalGroup(
            jDialogTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialogTimKiemLayout.createSequentialGroup()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70)
                .addGroup(jDialogTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jDialogTimKiemLayout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(27, 27, 27)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel10)
                        .addGap(24, 24, 24)
                        .addComponent(jLabel11))
                    .addGroup(jDialogTimKiemLayout.createSequentialGroup()
                        .addComponent(txtIDPhieuTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21)
                        .addComponent(txtIDNguoiDocTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jDialogTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jDialogTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jDateChooserNgayTraTimKiemFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jDateChooserNgayTraTimKiemTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel12))
                        .addGap(18, 18, 18)
                        .addGroup(jDialogTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTienPhatTimKiemFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jDialogTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtTienPhatTimKiemTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel13)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 97, Short.MAX_VALUE)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jTablePhieuTra.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "ID phiếu mượn", "ID người đọc", "Người đọc", "Ngày trả thực tế", "Tiền phạt"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTablePhieuTra);
        if (jTablePhieuTra.getColumnModel().getColumnCount() > 0) {
            jTablePhieuTra.getColumnModel().getColumn(0).setMaxWidth(50);
        }

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel2.setText("PHIẾU TRẢ");
        jPanel2.add(jLabel2);

        jPanel3.setLayout(new javax.swing.BoxLayout(jPanel3, javax.swing.BoxLayout.LINE_AXIS));
        jPanel3.add(filler5);
        jPanel3.add(filler1);

        btnTimKiem.setText("TÌM KIẾM");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });
        jPanel3.add(btnTimKiem);
        jPanel3.add(filler4);

        btnXem.setText("XEM CHI TIẾT");
        btnXem.setInheritsPopupMenu(true);
        btnXem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXemActionPerformed(evt);
            }
        });
        jPanel3.add(btnXem);
        jPanel3.add(filler2);

        btnHuyTimKiem.setText("TẢI LẠI");
        btnHuyTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyTimKiemActionPerformed(evt);
            }
        });
        jPanel3.add(btnHuyTimKiem);
        jPanel3.add(filler3);

        btnXoa.setText("XOÁ");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        jPanel3.add(btnXoa);

        jPanel4.add(jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 730, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 742, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 618, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(674, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnXemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXemActionPerformed
        clearAll();
        int selectedRow = jTablePhieuTra.getSelectedRow();
        if (selectedRow == -1) { // Check
            JOptionPane.showMessageDialog(this, "Vui lòng chọn dòng cần xem");
            return;
        }

        int idPhieuTra = (int) jTablePhieuTra.getValueAt(selectedRow, 0);
        PhieuTraBUS phieuTraBUS = new PhieuTraBUS();
        CTPhieuTraBUS ctPhieuTraBUS = new CTPhieuTraBUS();
        // Get phieuTra and Map<CTPhieuTra,Sach>
        PhieuTraDTO phieuTraDTO = phieuTraBUS.findOne(idPhieuTra);
        Map<CTPhieuTraDTO, SachDTO> listCTPhieuTraVaSach = ctPhieuTraBUS.findManyJoinSach(idPhieuTra);
        // Set text to textField
        txtIDPhieuXem.setText(String.valueOf(phieuTraDTO.getId()));
        txtIDNguoiDocXem.setText(String.valueOf(phieuTraDTO.getIdNguoiDoc()));
        txtTienPhatXem.setText(String.valueOf(phieuTraDTO.getTienPhat()));
        jDateChooserNgayTraXem.setDate(Date.from(phieuTraDTO.getNgayTraThatSu().atStartOfDay(ZoneId.systemDefault()).toInstant()));
        // Set row to jTable
        DefaultTableModel xemChiTietModel = (DefaultTableModel) jTableXemChiTiet.getModel();
        xemChiTietModel.setRowCount(0);
        listCTPhieuTraVaSach.forEach((ctPhieuTraDTO, sachDTO) -> {
            xemChiTietModel.addRow(new Object[]{
                    sachDTO.getId(),
                    sachDTO.getTenSach(),
                    ctPhieuTraDTO.getSoLuong()
            });
        });
        // Show
        jDialogXemChiTiet.setVisible(true);
        jDialogXemChiTiet.setLocationRelativeTo(null);
    }//GEN-LAST:event_btnXemActionPerformed

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        clearAll();
        jDialogTimKiem.setVisible(true);
        jDialogTimKiem.setLocationRelativeTo(null);
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void btnHuyTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyTimKiemActionPerformed
        setTableItemList();
    }//GEN-LAST:event_btnHuyTimKiemActionPerformed

    private void btnXacNhanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXacNhanActionPerformed
        // Get all rows in the table to CTPhieuTraDTO
        int rowCount = jTableXacNhanCTPhieuTra.getRowCount();
        int tienPhat = 0;
        int tongSoLuongMuon = 0;
        int tongSoLuongTra = 0;
        for (int row = 0; row < rowCount; row++) {
            int idSach = (int) jTableXacNhanCTPhieuTra.getValueAt(row, 0);
            int idPhieuTra = phieuTraDTOCanThem.getId();
            int soLuongMuon = (int) jTableXacNhanCTPhieuTra.getValueAt(row, 2);
            int soLuongTra = (int) jTableXacNhanCTPhieuTra.getValueAt(row, 3);
            int tinhTrang = (int) jTableXacNhanCTPhieuTra.getValueAt(row, 4);
            float giaSach = (float) jTableXacNhanCTPhieuTra.getValueAt(row, 5);
            // Tính tiền phạt
            tienPhat += (soLuongMuon - soLuongTra) * giaSach;
            int soNgayTre = (int) (LocalDate.now().toEpochDay() - phieuMuonDTO.getNgay_Tra().toLocalDate().toEpochDay());
            tienPhat += soNgayTre * 0.1 * giaSach * soLuongMuon;

            tongSoLuongMuon += soLuongMuon;
            tongSoLuongTra += soLuongTra;

            CTPhieuTraDTO ctPhieuTraDTO = new CTPhieuTraDTO(idSach, idPhieuTra, soLuongTra, tinhTrang);
            phieuTraDTOCanThem.getListCTPhieuTra().add(ctPhieuTraDTO);

        }
        phieuTraDTOCanThem.setTienPhat(tienPhat);

        if (tongSoLuongMuon == tongSoLuongTra) {
            phieuMuonDTO.setTinhTrang(PhieuMuonDTO.TinhTrang.DA_TRA);
        } else {
            phieuMuonDTO.setTinhTrang(PhieuMuonDTO.TinhTrang.TRA_THIEU);
            // Vi pham
            NguoiDocDTO nguoiDocDTO = new NguoiDocBUS().findOne(phieuTraDTOCanThem.getIdNguoiDoc());
            nguoiDocDTO.setTrangThaiViPham(NguoiDocDTO.TrangThaiViPham.VI_PHAM);
            new NguoiDocBUS().updateOne(nguoiDocDTO);
        }
        new PhieuMuonBUS().updateOne(phieuMuonDTO);

        //insert PhieuTra
        PhieuTraBUS phieuTraBUS = new PhieuTraBUS();
        phieuTraBUS.insertOne(phieuTraDTOCanThem);
        CTPhieuTraBUS ctPhieuTraBUS = new CTPhieuTraBUS();
        phieuTraDTOCanThem.getListCTPhieuTra().forEach(ctPhieuTraDTO -> {
            ctPhieuTraBUS.insertOne(ctPhieuTraDTO);
            // update so luong sach
            SachBUS sachBUS = new SachBUS();
            SachDTO sachDTO = sachBUS.findone(ctPhieuTraDTO.getIdSach());
            sachDTO.setSoluong(sachDTO.getSoluong() + ctPhieuTraDTO.getSoLuong());
            sachBUS.update(sachDTO);

            // cap nhat so luong muon cua nguoi doc
            NguoiDocBUS nguoiDocBUS = new NguoiDocBUS();
            NguoiDocDTO nguoiDocDTO = nguoiDocBUS.findOne(phieuTraDTOCanThem.getIdNguoiDoc());
            nguoiDocDTO.setSoLuongMuonChoPhep(nguoiDocDTO.getSoLuongMuonChoPhep() + ctPhieuTraDTO.getSoLuong());
            nguoiDocBUS.updateOne(nguoiDocDTO);
        });

        jDialogThem.setVisible(false);
        setTableItemList();
        clearAll();

    }//GEN-LAST:event_btnXacNhanActionPerformed

    private void btnHienThiDanhSachTraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHienThiDanhSachTraActionPerformed
        // Check
        if (txtIdPhieuMuon.getText().isEmpty()) {
            JOptionPane.showMessageDialog(jDialogThem, "Vui lòng nhập đầy đủ");
            return;
        }
//        Helpler.checkTextFieldNumber(txtIdNguoiDocThem, "ID người đọc", jDialogThem);
        Helpler.checkTextFieldNumber(txtIdPhieuMuon, "ID phiếu mượn", jDialogThem);
        int idPhieuMuon = Integer.parseInt(txtIdPhieuMuon.getText());
        // Find phieuMuon
        PhieuMuonBUS phieuMuonBUS = new PhieuMuonBUS();
        PhieuMuonDTO phieuMuonDTOCanThem = phieuMuonBUS.findOne(idPhieuMuon);

        // Check
        if (phieuMuonDTOCanThem == null) {
            JOptionPane.showMessageDialog(jDialogThem, "Không có phiếu mượn với id = " + idPhieuMuon);
            return;
        }
        // New phieuTra
        int idPhieuTra = MyConnection.getLastRecordId(PhieuTraDAO.TABLE_NAME) + 1;
        // Get phieu muon join sach
        CTPhieuMuonBUS ctPhieuMuonBUS = new CTPhieuMuonBUS();
        phieuMuonDTO = phieuMuonBUS.findOne(idPhieuMuon);
        phieuTraDTOCanThem = new PhieuTraDTO(idPhieuTra, phieuMuonDTOCanThem.getId_ND(), LocalDate.now(), 0, phieuMuonDTO.getId_pm());

        Map<CTPhieuMuonDTO, SachDTO> listCTPhieuMuonVaSach = ctPhieuMuonBUS.findManyJoinSach(idPhieuMuon);
        // insert into table
        DefaultTableModel xacNhanCTPhieuTraModel = (DefaultTableModel) jTableXacNhanCTPhieuTra.getModel();
        xacNhanCTPhieuTraModel.setRowCount(0);
        listCTPhieuMuonVaSach.forEach((ctPhieuMuonDTO, sachDTO) -> {
            xacNhanCTPhieuTraModel.addRow(new Object[]{
                    sachDTO.getId(),
                    sachDTO.getTenSach(),
                    ctPhieuMuonDTO.getSoLuong(),
                    "",
                    0,
                    sachDTO.getGiaSach()
            });
        });
    }//GEN-LAST:event_btnHienThiDanhSachTraActionPerformed

    private void btnXacNhanTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXacNhanTimKiemActionPerformed
        // Check
        if (txtIDPhieuTimKiem.getText().isEmpty()
                && txtIDNguoiDocTimKiem.getText().isEmpty()
                && jDateChooserNgayTraTimKiemFrom.getDate() == null
                && jDateChooserNgayTraTimKiemTo.getDate() == null
                && txtTienPhatTimKiemFrom.getText().isEmpty()
                && txtTienPhatTimKiemTo.getText().isEmpty()) {
            JOptionPane.showMessageDialog(jDialogTimKiem, "Vui lòng ít nhất chọn 1 điều kiện");
            return;
        }
        int idPhieu, tienPhatFrom, tienPhatTo;
        long idNguoiDoc;
        if (txtIDPhieuTimKiem.getText().isEmpty()) {
            idPhieu = -1;
        } else {
            idPhieu = Integer.parseInt(txtIDPhieuTimKiem.getText());
        }

        if (txtIDNguoiDocTimKiem.getText().isEmpty()) {
            idNguoiDoc = -1;
        } else {
            idNguoiDoc = Long.parseLong(txtIDNguoiDocTimKiem.getText());
        }

        if (txtTienPhatTimKiemFrom.getText().isEmpty()) {
            tienPhatFrom = -1;
        } else {
            tienPhatFrom = Integer.parseInt(txtTienPhatTimKiemFrom.getText());
        }

        if (txtTienPhatTimKiemTo.getText().isEmpty()) {
            tienPhatTo = -1;
        } else {
            tienPhatTo = Integer.parseInt(txtTienPhatTimKiemTo.getText());
        }

        Date ngayTraFrom = jDateChooserNgayTraTimKiemFrom.getDate();
        Date ngayTraTo = jDateChooserNgayTraTimKiemTo.getDate();
        // Check tien phat
        if (tienPhatFrom != -1 && tienPhatTo != -1) {
            if (tienPhatFrom >= tienPhatTo) {
                JOptionPane.showMessageDialog(jDialogTimKiem, "Tiền phạt ko hợp lệ");
                return;
            }
        }
        // Check date
        if (ngayTraFrom != null && ngayTraTo != null) {
            if (ngayTraFrom.after(ngayTraTo)) {
                JOptionPane.showMessageDialog(jDialogTimKiem, "Ngày trả không hợp lệ");
                return;
            }
        }
        // Find many
        PhieuTraBUS phieuTraBUS = new PhieuTraBUS();
        ArrayList<PhieuTraDTO> listPhieuTra = phieuTraBUS.findMany(
                idPhieu, idNguoiDoc, ngayTraFrom, ngayTraTo, tienPhatFrom, tienPhatTo
        );
        System.out.println(listPhieuTra);
        //Close
        jDialogTimKiem.setVisible(false);
        //Show
        phieuTraModel = (DefaultTableModel) jTablePhieuTra.getModel();
        phieuTraModel.setRowCount(0);
        listPhieuTra.forEach(phieuTraDTO -> {
            NguoiDocDTO nguoiDocDTO = new NguoiDocBUS().findOne(phieuTraDTO.getIdNguoiDoc());
            phieuTraModel.addRow(new Object[]{
                    phieuTraDTO.getId(),
                    phieuTraDTO.getIdPhieuMuon(),
                    phieuTraDTO.getIdNguoiDoc(),
                    nguoiDocDTO.getHoTen(),
                    phieuTraDTO.getNgayTraThatSu().format(DateTimeFormatter.ofPattern("dd/MM/yyyy")),
                    phieuTraDTO.getTienPhat()
            });
        });
    }//GEN-LAST:event_btnXacNhanTimKiemActionPerformed

    private void


    btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        int selectedRow = jTablePhieuTra.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn dòng cần xóa");
            return;
        }

        Object obj = jTablePhieuTra.getValueAt(selectedRow, 0);
        int idPhieuTra = Integer.parseInt(obj.toString());

        if (!Helpler.showConfirmDialog(this,
                String.format("Bạn có chắc chắn muốn xoá phiếu trả với ID = %s không?", idPhieuTra), "Xoá phiếu trả")) {
            return;
        }

        PhieuTraBUS phieuTraBUS = new PhieuTraBUS();
        PhieuTraDTO phieuTraDTO = phieuTraBUS.findOne(idPhieuTra);
        CTPhieuTraBUS ctPhieuTraBUS = new CTPhieuTraBUS();
        SachBUS sachBUS = new SachBUS();
        NguoiDocBUS nguoiDocBUS = new NguoiDocBUS();

        Map<CTPhieuTraDTO, SachDTO> listCTPhieuTraVaSach = ctPhieuTraBUS.findManyJoinSach(idPhieuTra);
        listCTPhieuTraVaSach.forEach((ctPhieuTraDTO, sachDTO) -> {
            sachDTO.setSoluong(sachDTO.getSoluong() - ctPhieuTraDTO.getSoLuong());
            if (sachDTO.getSoluong() <= 0) {
                sachDTO.setTrangthai(SachDTO.TrangThaiSach.HET_SACH.ordinal());
            }
            NguoiDocDTO nguoiDocDTO = new NguoiDocDTO();
            nguoiDocDTO.setSoLuongMuonChoPhep(nguoiDocDTO.getSoLuongMuonChoPhep() - ctPhieuTraDTO.getSoLuong());
            nguoiDocBUS.updateOne(nguoiDocDTO);
            sachBUS.update(sachDTO);
            ctPhieuTraBUS.deleteOne(ctPhieuTraDTO.getIdSach(), ctPhieuTraDTO.getIdPhieuTra());
        });



        phieuTraBUS.deleteOne(phieuTraDTO.getId());

        // Update phieuMuon tinhTrang to CHUA_TRA
        PhieuMuonBUS phieuMuonBUS = new PhieuMuonBUS();
        PhieuMuonDTO phieuMuonThuocPhieuTra = phieuMuonBUS.findOne(phieuTraDTO.getIdPhieuMuon());
        phieuMuonThuocPhieuTra.setTinhTrang(PhieuMuonDTO.TinhTrang.CHUA_TRA);
        phieuMuonBUS.updateOne(phieuMuonThuocPhieuTra);

        setTableItemList();
        JOptionPane.showMessageDialog(this, "Xoá thành công");
    }//GEN-LAST:event_btnXoaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHienThiDanhSachTra;
    private javax.swing.JButton btnHuyTimKiem;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnXacNhan;
    private javax.swing.JButton btnXacNhanTimKiem;
    private javax.swing.JButton btnXem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JPanel cardsThem;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.Box.Filler filler3;
    private javax.swing.Box.Filler filler4;
    private javax.swing.Box.Filler filler5;
    private com.toedter.calendar.JDateChooser jDateChooserNgayTraTimKiemFrom;
    private com.toedter.calendar.JDateChooser jDateChooserNgayTraTimKiemTo;
    private com.toedter.calendar.JDateChooser jDateChooserNgayTraXem;
    private javax.swing.JDialog jDialogThem;
    private javax.swing.JDialog jDialogTimKiem;
    private javax.swing.JDialog jDialogXemChiTiet;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTablePhieuTra;
    private javax.swing.JTable jTableXacNhanCTPhieuTra;
    private javax.swing.JTable jTableXemChiTiet;
    private javax.swing.JTextField txtIDNguoiDocTimKiem;
    private javax.swing.JTextField txtIDNguoiDocXem;
    private javax.swing.JTextField txtIDPhieuTimKiem;
    private javax.swing.JTextField txtIDPhieuXem;
    private javax.swing.JTextField txtIdPhieuMuon;
    private javax.swing.JTextField txtTienPhatTimKiemFrom;
    private javax.swing.JTextField txtTienPhatTimKiemTo;
    private javax.swing.JTextField txtTienPhatXem;
    // End of variables declaration//GEN-END:variables
}
